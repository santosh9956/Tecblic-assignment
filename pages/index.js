import Head from 'next/head';
import styles from '../styles/Home.module.css';
import UserTable from '../components/UserTable';
import { useState } from 'react';
import UserForm from '../components/UserForm';
import { Button } from '@chakra-ui/react';
import SearchBar from '../components/SearchBar';
import { debounce } from '../lib/helper';
import { useToast } from '@chakra-ui/react'
import ConfirmationModal from '../components/ConfirmationModal';

export default function Home() {
    const [userForm, setUserForm] = useState({status: false, data: {}});
    const [deleteStatus, setDeleteStatus] = useState({});
    const [users, setUsersList] = useState([]);
    const [searchValue, setSearchValue] = useState('');
    const toast = useToast();

    const submitUserFormHandler = (data) => {
      if (userForm?.editStatus) {
          const newUsers = users.map(item => {
            if (item.id === data.id) {
              return data;
            }
            return item;
          });
          setUsersList([...newUsers]);
          toast({
            title: 'Account Updated.',
            description: "We've Updates this account.",
            status: 'success',
            duration: 3000,
            isClosable: true,
          })
      }else{
        const timestamp = new Date().getTime();
        data.id = timestamp;
        if (!data.role) {
            data.role = 'Administrator';
        }
        setUsersList([...users, data]);
        toast({
          title: 'Account created.',
          description: "We've created this account.",
          status: 'success',
          duration: 3000,
          isClosable: true,
        })
      }
      setUserForm({status: false});
    }
  
    const onEditClick = (data) => {
      setUserForm(prevState => ({...prevState, status: true, data: data, editStatus: true}));
    }

    const onConfirmDeleteHandler = () => {
        const newUserList = users.filter(data => data.id !== deleteStatus.id);
        setUsersList(newUserList);
        toast({
          title: 'Account Deleted.',
          description: "We've Deleted this account.",
          status: 'success',
          duration: 3000,
          isClosable: true,
        });
        setDeleteStatus({status: false});
    }

    const handleSearch = (value) => {
      const newUsers =  users.filter(data => (data.name.includes(value) || data.email.includes(value) || data.role.includes(value)));
      setUsersList([...newUsers]);
    }

    const debounceSearch = debounce(handleSearch, 800);

    const onSearchChange = (value) => {
        setSearchValue(value);
        debounceSearch(value);
    }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <nav className={styles.navbar}>
              <img width={80} height={40} src={'https://www.tecblic.com/static/images/img/logo.png'} alt='site_logo'/>
          </nav>
          <section className={styles.mainSection}> 
            <div className={styles.sectionHeading}>
              <SearchBar value={searchValue} onChange={onSearchChange} />
              <Button onClick={() => setUserForm({status: true})} color={'red'}>Add User</Button>
            </div>
            <UserTable onDelete={(id) => setDeleteStatus({status: true, id: id})} onEdit={onEditClick} users={users} />
          </section>
        </div>
        {
          userForm.status &&
              <UserForm onSubmit={submitUserFormHandler} onClose={() => setUserForm({status: false})} value={userForm.data} />
        }
        {
          deleteStatus.status && 
          <ConfirmationModal isOpen={deleteStatus.status} onClose={() => setDeleteStatus({status: false})} onConfirm={onConfirmDeleteHandler} />
        }
      </main>
    </div>
  )
}
